{"version":3,"sources":["webpack:///src/app/admin/components/sources/sources-routing.module.ts","webpack:///src/app/admin/components/sources/sources.module.ts","webpack:///src/app/admin/components/sources/components/sources-view/sources-view.component.ts","webpack:///src/app/admin/components/sources/components/sources-view/sources-view.component.scss","webpack:///src/app/admin/components/sources/services/sources.service.ts","webpack:///src/app/admin/components/sources/components/sources-view/sources-view.component.html"],"names":["routes","path","component","SourcesRoutingModule","imports","forChild","exports","SourcesModule","declarations","SourcesViewComponent","service","subscriptionService","modalService","toastr","formBuilder","spinner","UnassignedSources","AssignedSources","Types","buttonDisable","ShowAssignedAll","ShowUnassignedAll","getActiveSubsciption","getTypes","subscribe","orders","initForm","show","response","subsciption","getAssignedSources","hide","err","error","Message","forms","group","RecourceUrl","required","SourceType","Terms","Id","Name","formGroup","Object","values","controls","forEach","control","markAsTouched","markFormGroupTouched","getUnassignedSources","AddSourceRequest","value","success","ref","modal","open","size","centered","source","selected","data","filter","state","AssignSource","sourceIds","res","window","location","Link","select","push","UnassignSource","selector","template","SourcesService","http","get","post","CustomSources","params","providedIn"],"mappings":"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","file":"components-sources-sources-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SourcesViewComponent } from './components/sources-view/sources-view.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:SourcesViewComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SourcesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SourcesRoutingModule } from './sources-routing.module';\nimport { SourcesViewComponent } from './components/sources-view/sources-view.component';\n\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatRippleModule} from '@angular/material/core';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartModule } from 'angular-highcharts';\nimport { SharedModule } from './../../../shared/shared.module';\n\n\n@NgModule({\n  declarations: [SourcesViewComponent],\n  imports: [\n    CommonModule,\n    SourcesRoutingModule,\n    NgbModule,\n    CommonModule,\n    FormsModule,ReactiveFormsModule,\n    MatRippleModule,\n    NgxPaginationModule,\n    ChartModule,\n    SharedModule,\n  ]\n})\nexport class SourcesModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { SourcesService } from './../../services/sources.service';\r\nimport { NgbModal,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { FormBuilder, FormGroup, Validators ,FormControl, FormArray} from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { SubscriptionService } from './../../../subscription/services/subscription.service';\r\n\r\n@Component({\r\n  selector: 'app-sources-view',\r\n  templateUrl: './sources-view.component.html',\r\n  styleUrls: ['./sources-view.component.scss']\r\n})\r\nexport class SourcesViewComponent implements OnInit {\r\n  UnassignedSources = [];\r\n  AssignedSources = [];\r\n  forms : FormGroup;\r\n  Types = [];\r\n  buttonDisable:boolean = false;\r\n  modal;\r\n  ShowAssignedAll:number = 0;\r\n  ShowUnassignedAll:number = 0;\r\n  subsciption;\r\n\r\n  constructor(\r\n    private service:SourcesService,\r\n    private subscriptionService:SubscriptionService,\r\n    private modalService: NgbModal,\r\n    private toastr:ToastrService,\r\n    private formBuilder: FormBuilder,\r\n    private spinner:NgxSpinnerService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getActiveSubsciption();\r\n     of(this.getTypes()).subscribe(orders => {\r\n      this.Types = orders;\r\n    });\r\n    this.initForm();\r\n  }\r\n  getActiveSubsciption(){\r\n    this.spinner.show();\r\n    this.subscriptionService.getActiveSubsciption().subscribe((response:any) => {\r\n      this.subsciption = response;\r\n      if(this.subsciption){\r\n        this.getAssignedSources();\r\n      }\r\n      this.spinner.hide();\r\n    },err => {\r\n        //handle errors here\r\n        this.toastr.error(err.error.Message);\r\n    });\r\n  }\r\n  initForm(){\r\n    this.forms = this.formBuilder.group({\r\n      RecourceUrl :['',Validators.required],\r\n      SourceType:['CSV',Validators.required],\r\n      Message :['',Validators.required],\r\n      Terms: ['',Validators.required],\r\n   });\r\n  }\r\n  getTypes() {\r\n    return [\r\n      { Id: 'CSV', Name: 'CSV' },\r\n      { Id: 'XML', Name: 'XML' },\r\n      { Id: 'Crawler', Name: 'Crawler' },\r\n    ];\r\n  }\r\n  markFormGroupTouched(formGroup: FormGroup) {\r\n    (<any>Object).values(formGroup.controls).forEach(control => {\r\n    control.markAsTouched();\r\n\r\n    if (control.controls) {\r\n        this.markFormGroupTouched(control);\r\n    }\r\n    });\r\n    return true;\r\n  }\r\n\r\n  getUnassignedSources(){\r\n    this.spinner.show();\r\n    this.service.getUnassignedSources().subscribe((response:any) => {\r\n      this.UnassignedSources = response;\r\n      this.spinner.hide();\r\n    },err => {\r\n        //handle errors here\r\n        this.toastr.error(err.error.Message);\r\n    });\r\n  }\r\n  getAssignedSources(){\r\n    this.spinner.show();\r\n    this.service.getAssignedSources().subscribe((response:any) => {\r\n      this.AssignedSources = response;\r\n      this.getUnassignedSources();\r\n      this.spinner.hide();\r\n    },err => {\r\n        //handle errors here\r\n        this.toastr.error(err.error.Message);\r\n    });\r\n  }\r\n  AddSourceRequest(){\r\n    this.spinner.show();\r\n    this.service.AddSourceRequest(this.forms.value).subscribe((response:any) => {\r\n      this.getUnassignedSources();\r\n      this.getAssignedSources();\r\n      this.spinner.hide();\r\n      this.toastr.success(\"Request added\");\r\n      this.initForm();\r\n    },err => {\r\n        //handle errors here\r\n        this.toastr.error(err.error.Message);\r\n    });\r\n  }\r\n  openModal( ref ) {\r\n    this.modal = this.modalService.open( ref , { size : 'lg',centered : true } );\r\n  }\r\n  AssignSource(source = null,selected = []){\r\n    this.spinner.show();\r\n    let data;\r\n    if(source){\r\n      data = this.UnassignedSources.filter((state) => {\r\n        return state.Id ==  source.Id;\r\n      }) ;\r\n    }else{\r\n      data = selected;\r\n    }\r\n    this.service.AssignSource({sourceIds:data}).subscribe((res:any) => {\r\n      window.location = res.Link\r\n      this.spinner.hide();\r\n    },err => {\r\n        //handle errors here\r\n        this.toastr.error(err.error.Message);\r\n    });\r\n  }\r\n  UnassignSource(source = null,selected = []){\r\n    this.spinner.show();\r\n    let data;\r\n    if(source){\r\n      data = this.AssignedSources.filter((state) => {\r\n        return state.Id !=  source.Id;\r\n      });\r\n    }else{\r\n      data = selected;\r\n    }\r\n    this.service.AssignSource({sourceIds:data}).subscribe((res:any) => {\r\n      window.location = res.Link\r\n      this.spinner.hide();\r\n    },err => {\r\n        //handle errors here\r\n        this.toastr.error(err.error.Message);\r\n    });\r\n  }\r\n  AssignedAllSelection(){\r\n    this.ShowAssignedAll = 0 ;\r\n    this.UnassignedSources.filter(res=>{\r\n      res.select ===  true ? this.ShowAssignedAll++:'';\r\n    });\r\n  }\r\n  AssignedAll(){\r\n    let data = [] ;\r\n    this.UnassignedSources.filter(res=>{\r\n      res.select ===  true ? data.push(res.Id) :'';\r\n    });\r\n    this.AssignSource(null,data);\r\n  }\r\n  UnassignedAllSelection(){\r\n    this.ShowUnassignedAll = 0 ;\r\n    this.AssignedSources.filter(res=>{\r\n      res.select ===  true ? this.ShowUnassignedAll++:'';\r\n    });\r\n  }\r\n  UnassignedAll(){\r\n    let data = [] ;\r\n    this.AssignedSources.filter(res=>{\r\n      res.select ===  true ? '' :data.push(res.Id);\r\n    });\r\n    this.UnassignSource(null,data);\r\n  }\r\n}\r\n","export default \"@media only screen and (max-width: 1024px) {\\n  .plan-btn-row {\\n    justify-content: center;\\n  }\\n}\\n\\n.mtop35 {\\n  margin-top: 35px;\\n}\\n\\n.card-header {\\n  border-top-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n}\\n\\ntable thead th {\\n  text-transform: uppercase;\\n  border-bottom: 0px;\\n  font-size: 11px;\\n  line-height: 16px;\\n  color: #A0A0A7;\\n}\\n\\ntable tr td {\\n  line-height: 20px;\\n}\\n\\ntable tr:nth-child(1) td {\\n  border-top: 0;\\n}\\n\\n.custom-control-input {\\n  z-index: 80;\\n  top: 10px;\\n}\\n\\n.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before {\\n  background-color: white;\\n  border-color: #adb5bd;\\n}\\n\\n.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::after {\\n  background-image: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9zb3VyY2VzL2NvbXBvbmVudHMvc291cmNlcy12aWV3L3NvdXJjZXMtdmlldy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJO0lBQ0UsdUJBQXVCO0VBQTNCO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBQ0E7RUFDRSw2QkFBNkI7RUFDN0IsNEJBQTRCO0FBRTlCOztBQUFBO0VBR00seUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDcEI7O0FBUkE7RUFZTSxpQkFBaUI7QUFBdkI7O0FBWkE7RUFpQk0sYUFBYTtBQURuQjs7QUFLQTtFQUNFLFdBQVc7RUFDWCxTQUFRO0FBRlY7O0FBSUE7RUFDRSx1QkFBc0I7RUFDdEIscUJBQXFCO0FBRHZCOztBQUdBO0VBQ0Usc0JBQXNCO0FBQXhCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vY29tcG9uZW50cy9zb3VyY2VzL2NvbXBvbmVudHMvc291cmNlcy12aWV3L3NvdXJjZXMtdmlldy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCl7XHJcbiAgICAucGxhbi1idG4tcm93e1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxufVxyXG4ubXRvcDM1e1xyXG4gIG1hcmdpbi10b3A6IDM1cHg7XHJcbn1cclxuLmNhcmQtaGVhZGVye1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XHJcbn1cclxudGFibGV7XHJcbiAgdGhlYWR7XHJcbiAgICB0aHtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogMHB4O1xyXG4gICAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xyXG4gICAgICBjb2xvcjogI0EwQTBBNztcclxuICAgIH1cclxuICB9XHJcbiAgdHJ7XHJcbiAgICB0ZHtcclxuICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHRyOm50aC1jaGlsZCgxKXtcclxuICAgIHRke1xyXG4gICAgICBib3JkZXItdG9wOiAwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4uY3VzdG9tLWNvbnRyb2wtaW5wdXR7XHJcbiAgei1pbmRleDogODA7XHJcbiAgdG9wOjEwcHg7XHJcbn1cclxuLmN1c3RvbS1jaGVja2JveCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW5kZXRlcm1pbmF0ZSB+IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO1xyXG4gIGJvcmRlci1jb2xvcjogI2FkYjViZDtcclxufVxyXG4uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1pbnB1dDppbmRldGVybWluYXRlIH4gLmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlciB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxufVxyXG4iXX0= */\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment as Constants } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SourcesService {\r\n\r\n  constructor(private http: HttpClient) { \r\n  }\r\n  getUnassignedSources(){\r\n    return this.http.get(Constants.UnassignedSources+'/Unassigned');\r\n  }\r\n  getAssignedSources(){\r\n    return this.http.get(Constants.UnassignedSources+'/Assigned');\r\n  }\r\n  AddSourceRequest(data){\r\n    return this.http.post(Constants.AddSourceRequest,data);\r\n  }\r\n  AssignSource(data){\r\n    return this.http.get(Constants.CustomSources,{ params:data });\r\n  }\r\n}\r\n","export default \"<div class=\\\"mb-5\\\">\\r\\n    <h4 class=\\\"page-heading font20 inter-semi-bold\\\">Manage sources</h4>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"row\\\" *ngIf=\\\"subsciption\\\">\\r\\n      <div class=\\\"col-md-7 mb-3 subsciption-left-section px-3\\\">\\r\\n          <div class=\\\"card shadow-sm\\\">\\r\\n              <div class=\\\"card-header d-flex align-items-center justify-content-between bg-white p-4 inter-semi-bold\\\">\\r\\n                 Assigned sources\\r\\n                 <a class=\\\"text-primary\\\" href=\\\"javascript:;\\\" (click)=\\\"UnassignedAll()\\\" *ngIf=\\\"ShowUnassignedAll\\\">+ Unassign selected({{ShowUnassignedAll}})</a>\\r\\n              </div>\\r\\n              <div class=\\\"card-body contigent-area page-area p-0\\\">\\r\\n\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th class=\\\"pt-4 px-4 pb-0 inter-semi-bold\\\">Source name</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let Source of AssignedSources;\\\">\\r\\n                                <td class=\\\"px-4 text-black font14 inter-medium\\\">\\r\\n                                      <div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n                                          <div class=\\\"custom-control custom-primary-checkbox custom-checkbox mr-2\\\">\\r\\n                                              <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"custom-control-input \\\" id=\\\"assignedSources{{Source.Id}}\\\" (change)=\\\"UnassignedAllSelection();\\\" [(ngModel)]=\\\"Source.select\\\">\\r\\n                                              <label class=\\\"custom-control-label\\\" for=\\\"assignedSources{{Source.Id}}\\\">\\r\\n                                                  {{ Source.Name }}\\r\\n                                              </label>\\r\\n                                          </div> \\r\\n                                          <div class=\\\"custom-dropdown\\\">\\r\\n                                              <div class=\\\"dropdown\\\" ngbDropdown container=\\\"body\\\" placement=\\\"bottom-right\\\">\\r\\n                                                  <a class=\\\"dropdown-toggle d-flex align-items-center\\\" ngbDropdownToggle id=\\\"profileDropdown\\\" >\\r\\n                                                     <div class=\\\"text-black\\\">\\r\\n                                                        <i class=\\\"mdi mdi-dots-vertical\\\"></i>\\r\\n                                                     </div>\\r\\n                                                  </a>\\r\\n                                                  <div class=\\\"dropdown-menu dropdown-menu-right custom-dropdown-menu p-0 option-menu\\\" ngbDropdownMenu aria-labelledby=\\\"profileDropdown\\\">\\r\\n                                                     <a class=\\\"dropdown-item\\\" href=\\\"javascript:;\\\" (click)=\\\"UnassignSource(Source)\\\">\\r\\n                                                        Unassign\\r\\n                                                     </a>\\r\\n                                                  </div>\\r\\n                                              </div>\\r\\n                                          </div>\\r\\n                                      </div>\\r\\n                                  </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n  \\r\\n                <div class=\\\"d-flex flex-wrap plan-btn-row p-4\\\">\\r\\n                      <button class=\\\"btn btn-fw inter-semi-bold btn-inverse-primary\\\" matRipple (click)=\\\"openModal(UpgradeModal)\\\">\\r\\n                        Upgrade subscription\\r\\n                      </button>\\r\\n                </div>\\r\\n                \\r\\n              </div>\\r\\n          </div>\\r\\n  \\r\\n          <div class=\\\"card mtop35 shadow-sm pb-3\\\">\\r\\n              <div class=\\\"card-header d-flex align-items-center justify-content-between bg-white p-4 inter-semi-bold\\\">\\r\\n                Unassigned sources\\r\\n                <a class=\\\"text-primary\\\" href=\\\"javascript:;\\\" (click)=\\\"AssignedAll()\\\" *ngIf=\\\"ShowAssignedAll\\\">+ Assign selected({{ShowAssignedAll}})</a>\\r\\n              </div>\\r\\n              <div class=\\\"card-body p-0 invoice-body\\\">\\r\\n                \\r\\n                  <div class=\\\"table-responsive\\\">\\r\\n                      <table class=\\\"table\\\">\\r\\n                          <thead>\\r\\n                              <tr>\\r\\n                                  <th class=\\\"pt-4 px-4 pb-0 inter-semi-bold\\\">Source name</th>\\r\\n                              </tr>\\r\\n                          </thead>\\r\\n  \\r\\n                          <tbody>\\r\\n                              <tr *ngFor=\\\"let Source of UnassignedSources;\\\">\\r\\n                                  <td class=\\\"px-4 text-black font14 inter-medium\\\">\\r\\n                                        <div class=\\\"d-flex justify-content-between align-items-center\\\">\\r\\n                                            <div class=\\\"custom-control custom-primary-checkbox custom-checkbox mr-2\\\">\\r\\n                                                <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"custom-control-input \\\" id=\\\"UnassignedSources{{Source.Id}}\\\" (change)=\\\"AssignedAllSelection();\\\" [(ngModel)]=\\\"Source.select\\\">\\r\\n                                                <label class=\\\"custom-control-label\\\" for=\\\"UnassignedSources{{Source.Id}}\\\">\\r\\n                                                    {{ Source.Name }}\\r\\n                                                </label>\\r\\n                                            </div> \\r\\n                                            <div class=\\\"custom-dropdown\\\">\\r\\n                                                <div class=\\\"dropdown\\\" ngbDropdown container=\\\"body\\\" placement=\\\"bottom-right\\\">\\r\\n                                                    <a class=\\\"dropdown-toggle d-flex align-items-center\\\" ngbDropdownToggle id=\\\"profileDropdown\\\" >\\r\\n                                                       <div class=\\\"text-black\\\">\\r\\n                                                          <i class=\\\"mdi mdi-dots-vertical\\\"></i>\\r\\n                                                       </div>\\r\\n                                                    </a>\\r\\n                                                    <div class=\\\"dropdown-menu dropdown-menu-right custom-dropdown-menu p-0 option-menu\\\" ngbDropdownMenu aria-labelledby=\\\"profileDropdown\\\">\\r\\n                                                       <a class=\\\"dropdown-item\\\" href=\\\"javascript:;\\\" (click)=\\\"AssignSource(Source)\\\">\\r\\n                                                          Assign\\r\\n                                                       </a>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                              </tr>\\r\\n                          </tbody>\\r\\n                      </table>\\r\\n                  </div>\\r\\n  \\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n  \\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"col-md-5 subsciption-right-section px-3\\\">\\r\\n  \\r\\n          <div class=\\\"card shadow-sm\\\">\\r\\n              <div class=\\\"card-header d-flex align-items-center justify-content-between bg-white p-4 inter-semi-bold\\\">\\r\\n                 Request to add a source\\r\\n              </div>\\r\\n              <div class=\\\"card-body py-3\\\">\\r\\n                <form class=\\\"form\\\"  [formGroup]=\\\"forms\\\" (ngSubmit)=\\\"markFormGroupTouched(forms)  && forms.valid && AddSourceRequest(forms)\\\"  novalidate>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Source Url</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" placeholder=\\\"Url\\\" formControlName=\\\"RecourceUrl\\\">\\r\\n                        <div *ngIf=\\\"forms.controls['RecourceUrl'].invalid && (forms.controls['RecourceUrl'].dirty || forms.controls['RecourceUrl'].touched)\\\" class=\\\"text-danger font12 pt-1\\\">\\r\\n                               <div *ngIf=\\\"forms.controls['RecourceUrl'].errors.required\\\">\\r\\n                                Url is required.\\r\\n                               </div>\\r\\n                         </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"font14 inter-medium\\\">Source type</div>\\r\\n                      \\r\\n                        <div class=\\\"custom-control custom-primary-checkbox custom-checkbox mr-5\\\" *ngFor=\\\"let Type of Types\\\" style=\\\"display: inline-flex;\\\">\\r\\n                            <input id=\\\"{{ Type.Id }}\\\" type=\\\"radio\\\" formControlName=\\\"SourceType\\\" [value]=\\\"Type.Id\\\" class=\\\"custom-control-input\\\" name=\\\"SourceType\\\">\\r\\n                            <label for=\\\"{{ Type.Id }}\\\" class=\\\"custom-control-label\\\">\\r\\n                                {{Type.Name}}                       \\r\\n                             </label>\\r\\n                        </div>\\r\\n\\r\\n                         <div *ngIf=\\\"forms.controls['SourceType'].invalid\\\" class=\\\"text-danger font12 pt-1\\\">\\r\\n                            <div *ngIf=\\\"forms.controls['SourceType'].errors.required\\\">\\r\\n                             Source type is required.\\r\\n                            </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Message</label>\\r\\n                        <textarea class=\\\"form-control form-control-lg\\\" placeholder=\\\"Message\\\" formControlName=\\\"Message\\\"></textarea>\\r\\n                        <div *ngIf=\\\"forms.controls['Message'].invalid && (forms.controls['Message'].dirty || forms.controls['Message'].touched)\\\" class=\\\"error-msg\\\">\\r\\n                           <div *ngIf=\\\"forms.controls['Message'].errors.required\\\">\\r\\n                           Message is required.\\r\\n                           </div>\\r\\n                        </div>\\r\\n                     </div>\\r\\n\\r\\n                    <div class=\\\"custom-control custom-primary-checkbox custom-checkbox\\\">\\r\\n                        <input type=\\\"checkbox\\\" formControlName=\\\"Terms\\\" class=\\\"custom-control-input \\\" id=\\\"TermsCheck\\\">\\r\\n                        <label class=\\\"custom-control-label font14\\\" for=\\\"TermsCheck\\\">\\r\\n                            I agree to the Terms & Conditions\\r\\n                        </label>\\r\\n                    </div>\\r\\n            \\r\\n                    <button class=\\\"btn btn-block mt-4\\\" [disabled] = \\\"buttonDisable || !forms.valid\\\" matRipple>\\r\\n                        Send request\\r\\n                    </button>\\r\\n\\r\\n                </form>\\r\\n                \\r\\n  \\r\\n              </div>\\r\\n          </div>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n  <ng-template #UpgradeModal class=\\\"modal fade\\\" id=\\\"exampleModal-2\\\" aria-labelledby=\\\"exampleModalLabel-2\\\">\\r\\n      <div class=\\\"modal-content \\\">\\r\\n         <div class=\\\"modal-header\\\">\\r\\n            <h5 class=\\\"modal-title  font-weight-bold\\\" id=\\\"exampleModalLabel-2\\\">Upgrade subscription</h5>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.dismiss()\\\" aria-label=\\\"Close\\\">&times;\\r\\n            </button>\\r\\n         </div>\\r\\n         <div class=\\\"modal-body\\\">\\r\\n           <div class=\\\"py-3 row\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n               <div class=\\\"inter-medium\\\">\\r\\n                  <p>Do you really wants to cancel subscription ?</p>\\r\\n               </div>\\r\\n              </div>\\r\\n               <div class=\\\"col-12\\\">\\r\\n                  <button type=\\\"button\\\" matRipple class=\\\"btn btn-primary inter-semi-bold\\\" (click)=\\\"cancelSubscription();\\\">Ok</button>\\r\\n                  <button type=\\\"button\\\" matRipple class=\\\"btn btn-inverse-light\\\" (click)=\\\"modal.dismiss()\\\"><span class=\\\"text-primary inter-semi-bold\\\">Cancel</span></button>\\r\\n               </div>\\r\\n           </div>\\r\\n         </div>\\r\\n      </div>\\r\\n   </ng-template>\\r\\n   \";"]}